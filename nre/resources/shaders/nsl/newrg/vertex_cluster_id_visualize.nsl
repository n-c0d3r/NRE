import(nrhi)

resource cb_main(ConstantBuffer)
default_constant_buffer(cb_main)

uniform local_to_clip_matrix(float4x4)

semantic VERTEX_POSITION(float3)
semantic VERTEX_CLUSTER_ID(uint)

vertex_shader vs_main
(
    in vertex_position(VERTEX_POSITION)
    in vertex_cluster_id(VERTEX_CLUSTER_ID)
    out out_vertex_clip_position(SV_POSITION)
    out out_vertex_cluster_id(VERTEX_CLUSTER_ID)
)
{
    out_vertex_clip_position = mul(local_to_clip_matrix, float4(vertex_position, 1.0f));
    out_vertex_cluster_id = vertex_cluster_id;
}

float3 hue2rgb(float hue) {
    hue = frac(hue);
    float r = abs(hue * 6 - 3) - 1;
    float g = 2 - abs(hue * 6 - 2);
    float b = 2 - abs(hue * 6 - 4);
    float3 rgb = float3(r,g,b);
    rgb = saturate(rgb);
    return rgb;
}

pixel_shader ps_main
(
    in vertex_clip_position(SV_POSITION)
    in vertex_cluster_id(VERTEX_CLUSTER_ID)
    out out_color(SV_TARGET)
)
{
    out_color = float4(
        hue2rgb(((float)vertex_cluster_id) * 1.71f),
        1
    );
}

@root_signature(NRE_NEWRG_BINDER_SIGNATURE_VS_1CBV_PS_1CBV)
@color_formats(R8G8B8A8_UNORM)
@rasterizer
(
	cull_mode(NONE)
	// fill_mode(WIREFRAME)
	fill_mode(SOLID)
)
@depth_stencil
(
    enable_depth_test(true)
)
@input_assembler
(
	VERTEX_POSITION
    @buffer(1)
	VERTEX_CLUSTER_ID
)
@primitive_topology(TRIANGLE_LIST)
pipeline_state pso_main
(
    vs_main
    ps_main
)
