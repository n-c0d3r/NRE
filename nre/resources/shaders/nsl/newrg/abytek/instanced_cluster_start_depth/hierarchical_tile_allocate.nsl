
import(newrg/abytek/prerequisites.nsh)



@slot(0)
resource global_shared_datas(RWStructuredBuffer(F_build_instanced_cluster_tile_global_shared_data))



@thread_group_size(
    16
    1
    1
)
compute_shader CS(
    global_thread_id(SV_DISPATCH_THREAD_ID)
)
{
    if(global_thread_id.x < global_shared_datas[0].hierarchical_tile_level_count)
    {
        uint node_count = global_shared_datas[0].hierarchical_tile_level_headers[global_thread_id.x].node_count;
        uint node_offset;

        uint tile_count_per_hierarchical_tile = 1U << global_thread_id.x;
        tile_count_per_hierarchical_tile *= tile_count_per_hierarchical_tile;

        uint instanced_node_count = node_count * tile_count_per_hierarchical_tile;
        uint instanced_node_offset;

        InterlockedAdd(
            global_shared_datas[0].next_node_id,
            node_count,
            node_offset
        );
        InterlockedAdd(
            global_shared_datas[0].next_instanced_node_id,
            instanced_node_count,
            instanced_node_offset
        );

        global_shared_datas[0].hierarchical_tile_level_headers[global_thread_id.x].node_offset = node_offset;
        global_shared_datas[0].hierarchical_tile_level_headers[global_thread_id.x].instanced_node_offset = instanced_node_offset;
        global_shared_datas[0].hierarchical_tile_level_headers[global_thread_id.x].node_write_offset = node_offset;
        global_shared_datas[0].hierarchical_tile_level_headers[global_thread_id.x].instanced_node_write_offset = instanced_node_offset;
    }
}

root_signature ROOT_SIGNATURE(
    DESCRIPTOR_TABLE(
        UAV(1)
    )
)

@root_signature(ROOT_SIGNATURE)
pipeline_state PSO(CS)