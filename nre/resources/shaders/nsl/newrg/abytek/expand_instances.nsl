
import(newrg/abytek/prerequisites.nsh)



@slot(0 0)
resource instance_transforms(
    StructuredBuffer(f32x4x4)
)

@slot(0 1)
resource instance_last_transforms(
    StructuredBuffer(f32x4x4)
)

@slot(0 2)
resource instance_mesh_ids(
    Buffer(F_mesh_id)
)

@slot(0 3)
resource mesh_headers(
    StructuredBuffer(F_mesh_header)
)

@slot(0 4)
resource mesh_bboxes(
    StructuredBuffer(F_bbox)
)

@slot(0 5)
resource options(
    ConstantBuffer
)
uniform instance_count(F_instance_id)

define NRE_NEWRG_ABYTEK_VIEW_BUFFER_SLOT(1)
define NRE_NEWRG_ABYTEK_VIEW_BUFFER_SLOT_SPACE(5)
import(newrg/abytek/view.nsh)

@slot(0 5)
resource instanced_dag_node_headers(
    RWStructuredBuffer(F_instanced_dag_node_header)
)

@slot(1 5)
resource instanced_dag_node_ranges(
    RWStructuredBuffer(F_instanced_dag_node_range)
)



@thread_group_size(
    NRE_NEWRG_ABYTEK_DEFAULT_THREAD_GROUP_SIZE_X
    NRE_NEWRG_ABYTEK_DEFAULT_THREAD_GROUP_SIZE_Y
    NRE_NEWRG_ABYTEK_DEFAULT_THREAD_GROUP_SIZE_Z
)
compute_shader CS(
    global_thread_id(SV_DISPATCH_THREAD_ID)
)
{
    F_instance_id instance_id = global_thread_id.x;

    F_instanced_dag_node_range dag_node_range;
    dag_node_range.offset = 4;
    dag_node_range.count = 2;
    instanced_dag_node_ranges[0] = dag_node_range;

    // if(instance_id >= instance_count)
    //     return;
        
    // F_mesh_id mesh_id = instance_mesh_ids[instance_id];

    // b8 is_culled = (mesh_id == INVALID_MESH_ID);

    // if(is_culled)
    //     return;

    // F_mesh_header mesh_header = mesh_headers[mesh_id];

    // u32 local_dag_node_offset = WavePrefixSum(mesh_header.dag_node_count);
    // u32 thread_group_dag_node_count = WaveActiveSum(mesh_header.dag_node_count);

    // GroupMemoryBarrierWithGroupSync();

    // if(local_dag_node_offset == 0)
    // {
    //     instanced_dag_node_ranges[0].count = thread_group_dag_node_count;

    //     u32 instance_dag_node_offset;
    //     InterlockedAdd(
    //         instanced_dag_node_ranges[0].offset,
    //         thread_group_dag_node_count,
    //         instance_dag_node_offset
    //     );
    // }

    // GroupMemoryBarrierWithGroupSync();
}

@root_signature(NRE_NEWRG_ABYTEK_EXPAND_INSTANCES_BINDER_SIGNATURE)
pipeline_state PSO(CS)